/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package k8s.io.api.scopes.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "k8s.io/api/scopes/v1alpha1";

// ScopeDefinition is a definition of a mapping between a scope (name, value) tuple
// and a list of namespace names.
// The metadata.namespace field is used to represent the scope name, and the
// metadata.name field is used to represent the scope value.
// For example, a ScopeDefinition in the namespace 'workspace' with name 'my-workspace'
// would correspond to the scope selector `scope.k8s.io/workspace=my-workspace`.
// A scopes generation field is used to uniquely identify a revision of a scope configuration.
message ScopeDefinition {
  // Standard object's metadata.
  // +optional
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ScopeDefinitionSpec spec = 2;
}

// ScopeDefinitionList is a collection of ScopeDefinition objects.
message ScopeDefinitionList {
  // Standard object's metadata.
  // +optional
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ScopeDefinition items = 2;
}

message ScopeDefinitionSpec {
  // Namespaces is the list of namespaces currently contained within this scope.
  repeated string namespaces = 1;
}

